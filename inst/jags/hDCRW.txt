data {
	pi <- 3.141592653589

	Omega[1,1] <- 1
	Omega[1,2] <- 0
	Omega[2,1] <- 0
	Omega[2,2] <- 1

	for(k in 1:N){
		first.loc[k,1] <- y[Yidx[k],1]
		first.loc[k,2] <- y[Yidx[k],2]
		}
	}
model
{
#  Hierarhcical "DCRW" model adapted from Ian D Jonsen, Joanna Mills Flemming
#	 and Ransom A Myers
#    Robust state-space modeling of animal movement data
#    ijonsen@dal.ca
#    Created by Ian Jonsen, 10/9/2013, last modified, 10/09/2013

# priors on process uncertainty
iSigma[1:2,1:2] ~ dwish(Omega[,], 2)
Sigma[1:2,1:2] <- inverse(iSigma[,])

theta ~ dunif(-pi,pi)
gamma ~ dbeta(1,1)

for(k in 1:N){
	logpsi[k] ~ dunif(-10, 10)  #prior on scaling parameter for t-dist. error variances
	psi[k] <- exp(logpsi[k])

## Priors for first locations
	for(i in 1:2){
		x[Xidx[k],i] ~ dt(first.loc[k,i], itau2[Xidx[k],i] * psi[k], nu[Xidx[k],i])
		}

	# assume simple random walk to estimate 2nd regular position
	x[(Xidx[k]+1),1:2] ~ dmnorm(x[Xidx[k],], iSigma[,])

	# transition equation
	for(t in (Xidx[k]+1):(Xidx[k+1]-2)){
	  Tdx[t,1] <- cos(theta) * (x[t,1] - x[t-1,1]) + sin(theta) * (x[t,2] - x[t-1,2])
 	  Tdx[t,2] <- -sin(theta) * (x[t,1] - x[t-1,1]) + cos(theta) * (x[t,2] - x[t-1,2])

	  x.mn[t,1] <- x[t,1] + Tdx[t,1] * gamma
	  x.mn[t,2] <- x[t,2] + Tdx[t,2] * gamma

	  # predict next location (with error)
	  x[t+1,1:2] ~ dmnorm(x.mn[t,], iSigma[,])
	  }

	# robust measurement equation
	for(t in (Xidx[k]+1):(Xidx[k+1]-1)){  # loops over regular time intervals (t)
	  for(i in idx[t]:(idx[t+1]-1)){  # loops over observed locations within interval t
	    for(q in 1:2){
	      zhat[i,q] <- (1-j[i]) * x[t-1,q] + j[i] * x[t,q]
		  y[i,q] ~ dt(zhat[i,q], itau2[i,q] * psi[k], nu[i,q])
	      } #q
	    } #i
	  }	#t
	} #k
}